-- ========================================
-- The KreOS 3.0 Skylark Settings
-- Written by kornichen
-- Lastly modified on 2nd April 2015
-- Licensed under General Public License V3
-- ========================================

os.loadAPI("/system/apis/skylark")

local args = { ... }

if args[1] ~= "drawer" then
	error("This has to be started from KreOS.")
end

local pages, buttons, inputboxes, labels, checkboxes, scrollbars, images, render, action = skylark.init()
local w, h = term.getSize()

local function imageGetSize(image)
	local x = 0
	local y = #image
	for i = 1, y do
		if #image[i] > x then
			x = #image[i]
		end
	end
	return x, y
end

local file = fs.open("/system/config/config", "r")
local data = file.readAll()
file.close()
local apps = textutils.unserialize(data)

pages:create("settings", "Settings", true, colors.white, true)

buttons:create("btnSettingsDrawer", "settings", true, 2, 2, "Drawer", colors.cyan, colors.gray, function()
	pages:disable("settings")
	error()
end)

local page = 1
local settingsIcons = {}
local temp = 1
local temp2 = 1
settingsIcons[1] = {}
for i = 2, #apps do
	settingsIcons[temp2][temp] = { apps[i][3], apps[i][4], apps[i][5] }
	temp = temp + 1
	if temp > 4 then
		temp = 1
		temp2 = temp2 + 1
		settingsIcons[temp2] = {}
	end
end
local settingsPages = #settingsIcons

if settingsPages > 1 then
	buttons:create("btnSettingsLast", "settings", true, 2, h - 1, "<--", colors.black, colors.white, function()
		if page > 1 then
			page = page - 1
		end
	end)
	buttons:create("btnSettingsNext", "settings", true, w - 3, h - 1, "-->", colors.black, colors.white, function()
		if page < settingsPages then
			page = page + 1
		end
	end)
end

local btnX = 1

for j = 1, settingsPages do
	local x = 1
	if #settingsIcons[page] == 1 then
		x = (w / 2) - 3
	elseif #settingsIcons[page] == 2 then
		x = (w / 2) - 6
	elseif #settingsIcons[page] == 3 then
		x = (w / 2) - 12
	elseif #settingsIcons[page] >= 4 then
		x = (w / 2) - 16
	end

	for i = 1, #settingsIcons[j] do

		if j == page then
			local enabled = true
		else
			local enabled = false
		end
		local icon = paintutils.loadImage(settingsIcons[j][i][2])
		local text = settingsIcons[j][i][1]

		images:create("imgApp" .. j .. i, "settings", enabled, x, (h / 2) - (imageGetSize(icon) / 2) + 2, icon, function()
			if settingsIcons[j][i][3] ~= false then
				pages:disable("settings")
				shell.run(settingsIcons[j][i][3], "settings")
				pages:enable("settings")
			end
		end)

		if string.len(text) == 1 then
			btnX = x + 3
		elseif string.len(text) == 2 or string.len(text) == 3 then
			btnX = x + 2
		elseif string.len(text) == 4 or string.len(text) == 5 then
			btnX = x + 1
		elseif string.len(text) == 6 or string.len(text) == 7 then
			btnX = x
		elseif string.len(text) == 8 or string.len(text) == 9 then
			btnX = x - 1
		elseif string.len(text) == 10 or string.len(text) == 11 then
			btnX = x - 2
		else
			btnX = x - 3
		end
		buttons:create("btnApp" .. j .. i, "settings", enabled, btnX, (h / 2) + 6, text, colors.black, colors.white, function()
			if settingsIcons[j][i][3] ~= false then
				pages:disable("settings")
				shell.run(settingsIcons[j][i][3])
				pages:enable("settings")
			end
		end)

		x = x + 9
	end
end

local function activateCurrentPage()
	for j = 1, settingsPages do
		for i = 1, #settingsIcons[j] do
			if page == j then
				images:enable("imgApp" .. j .. i)
				buttons:enable("btnApp" .. j .. i)
			else
				images:disable("imgApp" .. j .. i)
				buttons:disable("btnApp" .. j .. i)
			end
			if page == 1 then
				buttons:disable("btnSettingsLast")
				buttons:enable("btnSettingsNext")
			elseif page == settingsPages then
				buttons:disable("btnSettingsNext")
				buttons:enable("btnSettingsLast")
			else
				buttons:enable("btnSettingsNext")
				buttons:enable("btnSettingsLast")
			end
		end
	end
end

while true do
	activateCurrentPage()
	render:all(pages, buttons, inputboxes, labels, checkboxes, images)
	action:pullEvent(pages, buttons, inputboxes, checkboxes, images)
end